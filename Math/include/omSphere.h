//////////////////////////////////////////////////////////////////////////
///																		//
// @file   omSphere.h													//	
// @Author Raul Portillo (ruulaasz_@hotmail.com)						//
// @date   2015/10/10													//
// @brief  Class for a sphere geometry type structure					//
// @bug	   No known bugs.												//
//																		//
//////////////////////////////////////////////////////////////////////////
#pragma once
#include "omVector3D.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Declaracion de la clase omSphere																						//
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace OmicronSDK
{
	class omSphere
	{
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Declaracion de contructores y destructor																				//
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	public:
		explicit omSphere(omVector3D& _center = omVector3D(0.0f, 0.0f, 0.0f), float _radius = 0.0f) : m_vecCenter(_center), m_fRadius(_radius){}; /*!< Constructor Standard */
		omSphere(const omSphere& _sphere);
		~omSphere();

		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Declaracion de variables miembro de la clase																			//
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		float m_fRadius;		//<Radio de la esfera>//
		omVector3D m_vecCenter;	//<posicion del centro de la esfera>//

		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Declaracion de la Sobrecarga de operadores =,+,-,+=,-=																//
		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		omSphere& operator= (const omSphere& _sphere);
		omSphere& operator+= (const omSphere& _sphere);
		omSphere& operator-= (const omSphere& _sphere);

		omSphere operator+ (const omSphere& _sphere);
		omSphere operator- (const omSphere& _sphere);

		bool operator == (const omSphere& _sphere);
		bool operator != (const omSphere& _sphere);
	};
}